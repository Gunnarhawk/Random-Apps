using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Speech.Recognition;
using System.Speech.Synthesis;
using System.Diagnostics;
using System.Threading;

namespace Speech_Recognition_Test_Three
{
    public partial class Form1 : Form
    {
        SpeechRecognitionEngine recEngine = new SpeechRecognitionEngine();

        SpeechSynthesizer synthesizer = new SpeechSynthesizer();

        List<string> keywordList = new List<string>();

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            keywordList.Add("open");
            keywordList.Add("start");
            keywordList.Add("starts");
            keywordList.Add("stars");
            keywordList.Add("stop");
            keywordList.Add("google");
            keywordList.Add("search");

            Choices keywords = new Choices();

            for (int i = 0; i < keywordList.Count(); i++)
            {
                keywords.Add(keywordList[i]);
            }

            GrammarBuilder gBuilder = new GrammarBuilder();
            gBuilder.Append(keywords);

            Grammar keywordGrammar = new Grammar(gBuilder);

            Grammar grammar = new DictationGrammar();

            recEngine.LoadGrammarAsync(grammar);
            recEngine.LoadGrammarAsync(keywordGrammar);

            recEngine.SetInputToDefaultAudioDevice();

            recEngine.RecognizeAsync(RecognizeMode.Multiple);

            synthesizer.SelectVoiceByHints(VoiceGender.Female);

            recEngine.SpeechRecognized += SpeechDetected;
        }

        void SpeechDetected(object sender, SpeechRecognizedEventArgs e)
        {
            richTextBox1.Text += (e.Result.Text + "\n");

            string[] spokenWords = e.Result.Text.Split(' ');

            string output = "";

            int indexOfKeyword = 0;
            for (int i = 0; i < spokenWords.Length; i++)
            {
                for (int j = 0; j < keywordList.Count; j++)
                {
                    if (spokenWords[i].ToLower() == keywordList[j])
                    {
                        output += keywordList[j];
                        indexOfKeyword = i;
                    }
                }
            }

            if (output == "open")
            {

                try
                {
                    if (spokenWords[indexOfKeyword + 1] == "command")
                    {
                        OpenApplication("cmd");
                        synthesizer.SpeakAsync("Opening " + "command prompt");
                    }
                    else
                    {
                        OpenApplication(spokenWords[indexOfKeyword + 1]);
                        synthesizer.SpeakAsync("Opening " + spokenWords[indexOfKeyword + 1]);
                    }
                }
                catch (IndexOutOfRangeException z)
                {
                    synthesizer.SpeakAsync("Could not find specified path, please try stating a application to open");
                }

            }
            else if (output == "start" || output == "starts" || output == "stars")
            {
                try
                {
                    if(spokenWords[indexOfKeyword + 1] == "command")
                    {
                        OpenApplication("cmd");
                        synthesizer.SpeakAsync("Opening " + "command prompt");
                    }
                    else
                    {
                        OpenApplication(spokenWords[indexOfKeyword + 1]);
                        synthesizer.SpeakAsync("Opening " + spokenWords[indexOfKeyword + 1]);
                    }
                }
                catch (IndexOutOfRangeException z)
                {
                    synthesizer.SpeakAsync("Could not find specified path, please try stating a application to open");
                }
            }
            else if(output == "google" || output == "search")
            {
                try
                {
                    Google(spokenWords[indexOfKeyword + 1]);
                } catch(IndexOutOfRangeException z)
                {
                    Google("");
                }
            }
            else
            {
                switch (e.Result.Text.ToLower())
                {
                    case "thank you":
                        synthesizer.SpeakAsync("You're welcome.");
                        break;
                    case "can i get a command prompt":
                        OpenApplication("cmd");
                        break;
                    case "i need to write a command":
                        OpenApplication("cmd");
                        break;
                    default:
                        for (int i = 0; i < spokenWords.Length; i++)
                        {
                            if (spokenWords[i].ToLower() == "stop")
                            {
                                richTextBox1.Text += "Resetting Voice API\n";
                                synthesizer.SpeakAsyncCancelAll();
                                recEngine.RecognizeAsyncStop();
                                richTextBox1.Text += "Voice Reset\n";
                                break;
                            }
                            else if (spokenWords[i].ToLower() == "turn" && spokenWords[i+1].ToLower() == "off")
                            {
                                Close();
                                break;
                            }
                            else
                            {
                                synthesizer.SpeakAsync(e.Result.Text);
                                break;
                            }
                        }
                        break;
                }
            }
        }

        void OpenApplication(string specifiedApp)
        {
            Process process = new Process();
            ProcessStartInfo startInfo = new ProcessStartInfo();
            startInfo.UseShellExecute = false;
            startInfo.RedirectStandardOutput = true;
            startInfo.RedirectStandardInput = true;
            startInfo.FileName = "cmd.exe";
            process.StartInfo = startInfo;

            process.Start();

            process.StandardInput.WriteLine("start " + specifiedApp + ".exe");

            process.StandardInput.Flush();
            process.StandardInput.Close();

            process.Close();
        }

        void Google(string search)
        {
            Process process = new Process();
            ProcessStartInfo startInfo = new ProcessStartInfo();
            startInfo.UseShellExecute = false;
            startInfo.RedirectStandardOutput = true;
            startInfo.RedirectStandardInput = true;
            startInfo.FileName = "cmd.exe";
            process.StartInfo = startInfo;

            process.Start();

            process.StandardInput.WriteLine("start https://google.com/search?q=" + search);
            //https://google.com/search?q=xyz

            process.StandardInput.Flush();
            process.StandardInput.Close();

            process.Close();
        }
    }
}
